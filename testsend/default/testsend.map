Archive member included because of file (symbol)

d:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                              d:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o (exit)
d:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                              com.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD d:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
LOAD atmel_start.o
LOAD com.o
LOAD driver_isr.o
LOAD hal_avr.o
LOAD main.o
LOAD tat.o
LOAD d:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a
LOAD d:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a
LOAD d:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x13e4
 *(.vectors)
 .vectors       0x00000000       0x8c d:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000008c                . = ALIGN (0x2)
                0x0000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000008c        0x0 linker stubs
 *(.trampolines*)
                0x0000008c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000008c                __ctors_start = .
 *(.ctors)
                0x0000008c                __ctors_end = .
                0x0000008c                __dtors_start = .
 *(.dtors)
                0x0000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000008c        0x0 d:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
                0x0000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000008c        0xc d:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000098       0x1a d:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
                0x00000098                __do_copy_data
 .init4         0x000000b2       0x10 d:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                0x000000b2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000c2        0x8 d:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
 *(.init9)
 *(.text)
 .text          0x000000ca        0x4 d:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
                0x000000ca                __vector_22
                0x000000ca                __vector_28
                0x000000ca                __vector_1
                0x000000ca                __vector_32
                0x000000ca                __vector_34
                0x000000ca                __vector_24
                0x000000ca                __vector_12
                0x000000ca                __bad_interrupt
                0x000000ca                __vector_6
                0x000000ca                __vector_31
                0x000000ca                __vector_3
                0x000000ca                __vector_23
                0x000000ca                __vector_30
                0x000000ca                __vector_25
                0x000000ca                __vector_13
                0x000000ca                __vector_17
                0x000000ca                __vector_19
                0x000000ca                __vector_7
                0x000000ca                __vector_27
                0x000000ca                __vector_5
                0x000000ca                __vector_33
                0x000000ca                __vector_4
                0x000000ca                __vector_9
                0x000000ca                __vector_2
                0x000000ca                __vector_21
                0x000000ca                __vector_15
                0x000000ca                __vector_29
                0x000000ca                __vector_8
                0x000000ca                __vector_26
                0x000000ca                __vector_10
                0x000000ca                __vector_16
                0x000000ca                __vector_20
 .text          0x000000ce        0x2 atmel_start.o
                0x000000ce                atmel_start_init
 .text          0x000000d0      0x164 com.o
                0x00000160                com_reset_receiver
                0x00000102                com_send_hex
                0x00000144                com_get_number_of_received_bytes
                0x000000f0                com_send_string
                0x000000d0                com_init
                0x0000012e                com_get_received_data
                0x00000172                __vector_18
 .text          0x00000234        0x0 driver_isr.o
 .text          0x00000234      0x696 hal_avr.o
                0x000003fe                hal_get_unknown_isr_flag
                0x000002fc                hal_clear_trx_ur_flag
                0x0000036a                hal_clear_trx_end_event_handler
                0x00000428                hal_clear_pll_unlock_flag
                0x000004ca                hal_subregister_read
                0x000002d8                hal_clear_bat_low_flag
                0x0000060a                hal_sram_read
                0x00000320                hal_clear_trx_end_flag
                0x000003ba                hal_set_rx_start_event_handler
                0x00000234                hal_reset_flags
                0x00000348                hal_set_trx_end_event_handler
                0x00000446                hal_get_pll_lock_flag
                0x00000404                hal_clear_unknown_isr_flag
                0x000005c6                hal_frame_write
                0x00000392                hal_clear_rx_start_flag
                0x000003dc                hal_clear_rx_start_event_handler
                0x0000033e                hal_get_trx_end_event_handler
                0x0000031a                hal_get_trx_end_flag
                0x0000073e                __vector_11
                0x0000049a                hal_register_write
                0x0000038c                hal_get_rx_start_flag
                0x00000690                hal_trx_aes_wrrd
                0x0000064e                hal_sram_write
                0x000002d2                hal_get_bat_low_flag
                0x000006f6                hal_get_system_time
                0x000004f0                hal_subregister_write
                0x000003b0                hal_get_rx_start_event_handler
                0x00000422                hal_get_pll_unlock_flag
                0x0000052e                hal_frame_read
                0x0000044c                hal_clear_pll_lock_flag
                0x0000089c                __vector_14
                0x0000046a                hal_register_read
                0x000002f6                hal_get_trx_ur_flag
                0x0000027a                hal_init
 .text          0x000008ca      0x384 main.o
                0x00000946                main
 .text          0x00000c4e      0x792 tat.o
                0x00000e5a                tat_set_trx_state
                0x00000f14                tat_calibrate_filter
                0x00001296                tat_do_cca
                0x00000dfe                tat_use_auto_tx_crc
                0x00000e1a                tat_reset_state_machine
                0x00001094                tat_configure_csma
                0x00000c4e                tat_reset_trx
                0x00000dc0                tat_get_ed_threshold
                0x00000d56                tat_get_clock_speed
                0x0000131c                tat_calibrate_pll
                0x000011b4                tat_set_pan_id
                0x00000d78                tat_batmon_get_voltage_range
                0x00001032                tat_set_operating_channel
                0x000010fe                tat_set_extended_address
                0x00001252                tat_get_short_address
                0x00000df0                tat_set_device_role
                0x000011cc                tat_get_extended_address
                0x00000e36                tat_enter_sleep_mode
                0x00000de4                tat_get_operating_channel
                0x00000c74                tat_send_data_with_retry
                0x000012e0                tat_do_ed_scan
                0x00001274                tat_get_pan_id
                0x00000d32                tat_leave_sleep_mode
                0x00000d62                tat_batmon_get_status
                0x00000dcc                tat_get_cca_mode
                0x00000d90                tat_get_rssi_value
                0x0000119c                tat_set_short_address
                0x00000f50                tat_set_clock_speed
                0x00000fdc                tat_set_cca_mode
                0x00000cf8                tat_send_data
                0x00000c5c                tat_get_device_role
                0x00001012                tat_set_tx_power_level
                0x00000c68                tat_get_trx_state
                0x0000137e                tat_init
                0x00000d84                tat_batmon_get_voltage_threshold
                0x00000dd8                tat_get_tx_power_level
                0x00000f9c                tat_batmon_configure
 .text          0x000013e0        0x0 d:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .text          0x000013e0        0x0 d:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                0x000013e0                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000013e0        0x0 d:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .text.libgcc   0x000013e0        0x0 d:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                0x000013e0                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000013e0        0x0 d:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                0x000013e0                exit
                0x000013e0                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000013e0        0x4 d:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 *(.fini0)
                0x000013e4                _etext = .

.data           0x00800100       0x6a load address 0x000013e4
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 d:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
 .data          0x00800100        0x0 atmel_start.o
 .data          0x00800100       0x13 com.o
 .data          0x00800113        0x0 driver_isr.o
 .data          0x00800113        0x0 hal_avr.o
 .data          0x00800113       0x57 main.o
 .data          0x0080016a        0x0 tat.o
 .data          0x0080016a        0x0 d:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .data          0x0080016a        0x0 d:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080016a                . = ALIGN (0x2)
                0x0080016a                _edata = .
                0x0080016a                PROVIDE (__data_end, .)

.bss            0x0080016a      0x3a5
                0x0080016a                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080016a        0x0 d:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
 .bss           0x0080016a        0x0 atmel_start.o
 .bss           0x0080016a       0xf1 com.o
 .bss           0x0080025b        0x0 driver_isr.o
 .bss           0x0080025b        0xd hal_avr.o
 .bss           0x00800268      0x2a7 main.o
 .bss           0x0080050f        0x0 tat.o
 .bss           0x0080050f        0x0 d:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .bss           0x0080050f        0x0 d:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
                0x0080050f                PROVIDE (__bss_end, .)
                0x000013e4                __data_load_start = LOADADDR (.data)
                0x0000144e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080050f        0x0
                0x0080050f                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080050f                PROVIDE (__noinit_end, .)
                0x0080050f                _end = .
                0x0080050f                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0xa0
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 atmel_start.o
 .debug_aranges
                0x00000020       0x20 com.o
 .debug_aranges
                0x00000040       0x20 hal_avr.o
 .debug_aranges
                0x00000060       0x20 main.o
 .debug_aranges
                0x00000080       0x20 tat.o

.debug_pubnames
                0x00000000      0x7fa
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x27 atmel_start.o
 .debug_pubnames
                0x00000027       0xaa com.o
 .debug_pubnames
                0x000000d1      0x37b hal_avr.o
 .debug_pubnames
                0x0000044c       0x1b main.o
 .debug_pubnames
                0x00000467      0x393 tat.o

.debug_info     0x00000000     0x2428
 *(.debug_info)
 .debug_info    0x00000000       0x75 atmel_start.o
 .debug_info    0x00000075      0x25c com.o
 .debug_info    0x000002d1       0x61 driver_isr.o
 .debug_info    0x00000332      0xb35 hal_avr.o
 .debug_info    0x00000e67      0x592 main.o
 .debug_info    0x000013f9     0x102f tat.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x819
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0x48 atmel_start.o
 .debug_abbrev  0x00000048       0xdb com.o
 .debug_abbrev  0x00000123       0x33 driver_isr.o
 .debug_abbrev  0x00000156      0x271 hal_avr.o
 .debug_abbrev  0x000003c7      0x204 main.o
 .debug_abbrev  0x000005cb      0x24e tat.o

.debug_line     0x00000000     0x1cdd
 *(.debug_line)
 .debug_line    0x00000000       0x62 atmel_start.o
 .debug_line    0x00000062      0x25b com.o
 .debug_line    0x000002bd       0x3e driver_isr.o
 .debug_line    0x000002fb      0xaa6 hal_avr.o
 .debug_line    0x00000da1      0x517 main.o
 .debug_line    0x000012b8      0xa25 tat.o

.debug_frame    0x00000000      0x560
 *(.debug_frame)
 .debug_frame   0x00000000       0x20 atmel_start.o
 .debug_frame   0x00000020       0x80 com.o
 .debug_frame   0x000000a0      0x230 hal_avr.o
 .debug_frame   0x000002d0       0x30 main.o
 .debug_frame   0x00000300      0x260 tat.o

.debug_str      0x00000000     0x11ad
 *(.debug_str)
 .debug_str     0x00000000       0x81 atmel_start.o
                                 0xb5 (size before relaxing)
 .debug_str     0x00000081      0x182 com.o
                                0x21a (size before relaxing)
 .debug_str     0x00000203       0x10 driver_isr.o
                                 0xa3 (size before relaxing)
 .debug_str     0x00000213      0x541 hal_avr.o
                                0x61a (size before relaxing)
 .debug_str     0x00000754      0x3dc main.o
                                0x51b (size before relaxing)
 .debug_str     0x00000b30      0x67d tat.o
                                0xa0a (size before relaxing)

.debug_loc      0x00000000     0x10c1
 *(.debug_loc)
 .debug_loc     0x00000000       0x87 com.o
 .debug_loc     0x00000087      0x66e hal_avr.o
 .debug_loc     0x000006f5       0x94 main.o
 .debug_loc     0x00000789      0x938 tat.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(testsend.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0x78
 .debug_ranges  0x00000000       0x78 main.o
